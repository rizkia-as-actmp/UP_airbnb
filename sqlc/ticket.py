# Code generated by sqlc. DO NOT EDIT.
# versions:
#   sqlc v1.24.0
# source: ticket.sql
import dataclasses
from typing import Any, Optional

import sqlalchemy

from sqlc import models


CREATE_TICKET = """-- name: create_ticket \\:execresult
INSERT INTO ticket (
    holder_id,
    host_id,
    valid_at,
    expired_at,
    is_finish,
    price
) VALUES (
    :p1, :p2, :p3, :p4, :p5, :p6
)
"""


@dataclasses.dataclass()
class CreateTicketParams:
    holder_id: Optional[Any]
    host_id: Optional[Any]
    valid_at: Any
    expired_at: Any
    is_finish: Any
    price: Any


GET_LIST_TICKET = """-- name: get_list_ticket \\:many
SELECT id, holder_id, host_id, valid_at, expired_at, is_finish, price FROM ticket WHERE holder_id = :p1
"""


UPDATE_TICKET = """-- name: update_ticket \\:execresult
UPDATE ticket 
SET is_finish= TRUE
WHERE id = :p1
"""


class Querier:
    def __init__(self, conn: sqlalchemy.engine.Connection):
        self._conn = conn

    def _create_ticket(self, arg: CreateTicketParams) -> sqlalchemy.engine.Result:
        return self._conn.execute(sqlalchemy.text(CREATE_TICKET), {
            "p1": arg.holder_id,
            "p2": arg.host_id,
            "p3": arg.valid_at,
            "p4": arg.expired_at,
            "p5": arg.is_finish,
            "p6": arg.price,
        })

    def _get_list_ticket(self, *, holder_id: Optional[Any]) -> sqlalchemy.engine.Result:
        return self._conn.execute(sqlalchemy.text(GET_LIST_TICKET), {"p1": holder_id})

    def update_ticket(self, *, id: Any) -> sqlalchemy.engine.Result:
        return self._conn.execute(sqlalchemy.text(UPDATE_TICKET), {"p1": id})
