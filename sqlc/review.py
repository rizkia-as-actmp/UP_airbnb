# Code generated by sqlc. DO NOT EDIT.
# versions:
#   sqlc v1.24.0
# source: review.sql
import dataclasses
from typing import Any, Optional

import sqlalchemy

from sqlc import models


CREATE_REVIEW = """-- name: create_review \\:execresult
INSERT INTO review (
    ticket_id,
    writer_id,
    host_id,
    writer_name,
    comment,
    created_at
) VALUES (
    p1, p2, p3, p4, p5, p6 
)
"""


@dataclasses.dataclass()
class CreateReviewParams:
    ticket_id: Optional[Any]
    writer_id: Optional[Any]
    host_id: Optional[Any]
    writer_name: Any
    comment: Any
    created_at: Any


GET_LIST_REVIEW = """-- name: get_list_review \\:many
SELECT id, ticket_id, writer_id, host_id, writer_name, comment, created_at FROM review WHERE host_id = p1
"""


class Querier:
    def __init__(self, conn: sqlalchemy.engine.Connection):
        self._conn = conn

    def create_review(self, arg: CreateReviewParams) -> sqlalchemy.engine.Result:
        return self._conn.execute(sqlalchemy.text(CREATE_REVIEW), {
            "p1": arg.ticket_id,
            "p2": arg.writer_id,
            "p3": arg.host_id,
            "p4": arg.writer_name,
            "p5": arg.comment,
            "p6": arg.created_at,
        })

    def get_list_review(self, *, host_id: Optional[Any]) -> sqlalchemy.engine.Result:
        return self._conn.execute(sqlalchemy.text(GET_LIST_REVIEW), {"p1": host_id})
